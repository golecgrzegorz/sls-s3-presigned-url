service: sls-s3-presigned-url
useDotenv: true
frameworkVersion: '3'

custom:
  sourceBucket: bucket-media-upload

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}
  profile: global-lambdas
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: [
        "arn:aws:s3:::${self:custom.sourceBucket}",
        "arn:aws:s3:::${self:custom.sourceBucket}/*"
      ]

functions:
  authorizer:
    handler: src/libs/authorizer.handle
    memorySize: 128
    timeout: 3
    environment:
      AUTH_TOKEN: ${env:AUTH_TOKEN}
      BUCKET: ${self:custom.sourceBucket}

  presignedUrl:
    handler: src/index.presignedUrl
    events:
      - http:
          path: /s3/presigned-url/{type}
          method: get
          cors: true
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
